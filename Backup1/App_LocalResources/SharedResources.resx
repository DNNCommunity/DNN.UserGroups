<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddMeeting.Text" xml:space="preserve">
    <value>Add New Meeting</value>
  </data>
  <data name="AddUser.Text" xml:space="preserve">
    <value>Add User</value>
  </data>
  <data name="AllCountries.Text" xml:space="preserve">
    <value>All Countries</value>
  </data>
  <data name="EMAIL_Activitated_Body.Text" xml:space="preserve">
    <value>Dear {0}

This Email is to notify you that the following DotNetNuke UserGroup has been Activated.

UserGroup: {1}

You can view the group here: {2}</value>
  </data>
  <data name="EMAIL_Activitated_Subject.Text" xml:space="preserve">
    <value>UserGroup Activated - {0}</value>
  </data>
  <data name="EMAIL_DeActivitated_Body.Text" xml:space="preserve">
    <value>Dear {0}

This Email is to notify you that the following DotNetNuke UserGroup has been De-Activated.

UserGroup: {1}

You can view the group here: {2}</value>
  </data>
  <data name="EMAIL_DeActivitated_Subject.Text" xml:space="preserve">
    <value>UserGroup De-Activated - {0}</value>
  </data>
  <data name="EMAIL_MinimumMembership_Body.Text" xml:space="preserve">
    <value>Dear User Group Administrator

This Email is to notify you that the following DotNetNuke UserGroup has reached the preset minimum member threshold required to be Activated.

UserGroup: {0}

You can view the group here: {1}</value>
  </data>
  <data name="EMAIL_MinimumMembership_Subject.Text" xml:space="preserve">
    <value>UserGroup {0} Reached Mimumum Membership</value>
  </data>
  <data name="MailSentSuccess.Heading" xml:space="preserve">
    <value>Email Sent</value>
  </data>
  <data name="MailSentSuccess.Text" xml:space="preserve">
    <value>Email Message sent successfully.</value>
  </data>
  <data name="MeetingAddedError.Heading" xml:space="preserve">
    <value>Error adding Meeting</value>
  </data>
  <data name="MeetingAddedError.Text" xml:space="preserve">
    <value>There was an error creating/updating the User Group Meeting.</value>
  </data>
  <data name="MeetingAddedSuccess.Heading" xml:space="preserve">
    <value>Meeting Created</value>
  </data>
  <data name="MeetingAddedSuccess.Text" xml:space="preserve">
    <value>The User Group meeting was created succesfully.</value>
  </data>
  <data name="MeetingError.Heading" xml:space="preserve">
    <value>Meeting Error</value>
  </data>
  <data name="MeetingError.Text" xml:space="preserve">
    <value>There was an error creating the User Group meeting.</value>
  </data>
  <data name="MeetingNotUpdatedWarning.Heading" xml:space="preserve">
    <value>Meeting Not Updated</value>
  </data>
  <data name="MeetingNotUpdatedWarning.Text" xml:space="preserve">
    <value>The meeting was not updated because you made no changes.</value>
  </data>
  <data name="MeetingUpdatedSuccess.Heading" xml:space="preserve">
    <value>Meeting Updated</value>
  </data>
  <data name="MeetingUpdatedSuccess.Text" xml:space="preserve">
    <value>The User Group meeting was updated successfully.</value>
  </data>
  <data name="NoMeetings.Text" xml:space="preserve">
    <value>There are no meetings scheduled for this User Group.</value>
  </data>
  <data name="NotificationError.Heading" xml:space="preserve">
    <value>Notification Error</value>
  </data>
  <data name="NotificationError.Text" xml:space="preserve">
    <value>There was an error sending the email notifications.</value>
  </data>
  <data name="Return.Text" xml:space="preserve">
    <value>Return</value>
  </data>
  <data name="SendMessage.Text" xml:space="preserve">
    <value>Send an Email Message</value>
  </data>
  <data name="UserGroupAddedSuccess.Heading" xml:space="preserve">
    <value>User Group Created</value>
  </data>
  <data name="UserGroupAddedSuccess.Text" xml:space="preserve">
    <value>The User Group was successfully created.</value>
  </data>
  <data name="UserGroupNotUpdatedWarning.Heading" xml:space="preserve">
    <value>User Group Not Updated</value>
  </data>
  <data name="UserGroupNotUpdatedWarning.Text" xml:space="preserve">
    <value>The User Group was not updated because you made no changes.</value>
  </data>
  <data name="UserGroupUpdateError.Heading" xml:space="preserve">
    <value>User Group Error</value>
  </data>
  <data name="UserGroupUpdateError.Text" xml:space="preserve">
    <value>There was an error creating/updating the User Group.</value>
  </data>
  <data name="UserGroupUpdateSuccess.Heading" xml:space="preserve">
    <value>User Group Updated</value>
  </data>
  <data name="UserGroupUpdateSuccess.Text" xml:space="preserve">
    <value>The User Group was successfully updated.</value>
  </data>
  <data name="EMAIL_NewMember_Body.Text" xml:space="preserve">
    <value>Dear  {0}

This Email is to notify you that the following DotNetNuke UserGroup has a new member.

UserGroup: {1}
Member: {2}

You can view the group here: {3}</value>
  </data>
  <data name="EMAIL_NewMember_Subject.Text" xml:space="preserve">
    <value>UserGroup {0} has a New Member</value>
  </data>
  <data name="MeetingUpdateSuccess.Heading" xml:space="preserve">
    <value>Meeting Updated</value>
  </data>
  <data name="MeetingUpdateSuccess.Text" xml:space="preserve">
    <value>The meeting was successfully updated.</value>
  </data>
  <data name="JoinGroup.Text" xml:space="preserve">
    <value>Join Group</value>
  </data>
  <data name="LeaveGroup.Text" xml:space="preserve">
    <value>Leave Group</value>
  </data>
  <data name="LoginToJoin.Text" xml:space="preserve">
    <value>Login to Join</value>
  </data>
  <data name="SwitchGroup.Text" xml:space="preserve">
    <value>Switch to Group</value>
  </data>
  <data name="EMAIL_Leaving_Body.Text" xml:space="preserve">
    <value>Dear  {0}

This Email is to notify you that the following DotNetNuke UserGroup has lost a member.

UserGroup: {1}
Member: {2}

You can view the group here: {3}</value>
  </data>
  <data name="EMAIL_Leaving_Subject.Text" xml:space="preserve">
    <value>UserGroup {0} Member Removal</value>
  </data>
  <data name="EMAIL_NewMeeting_Body.Text" xml:space="preserve">
    <value />
  </data>
  <data name="EMAIL_NewMeeting_Subject.Text" xml:space="preserve">
    <value />
  </data>
  <data name="EMAIL_ContactOfficers_Subject.Text" xml:space="preserve">
    <value>UserGroup {0} : Online Contact Form</value>
  </data>
</root>